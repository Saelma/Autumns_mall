plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.9-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.3.0'  // Asciidoctor 플러그인 적용
}

group = 'com.meet42'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    gradlePluginPortal()  // 플러그인 포털 추가

    allprojects {
        repositories {
            maven { url 'https://jitpack.io'}
        }
    }
}

dependencies {
    // jpa & mysql
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // jwts
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    //gson - json 메시지를 다루기 위한 라이브러리
    implementation 'com.google.code.gson:gson'

    // dto validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // env 파일을 추가하여 깃허브에 올라가면 안 되는 민감한 정보 숨기기
    implementation 'io.github.cdimascio:dotenv-java:3.2.0'

    // mapper
    implementation 'org.mapstruct:mapstruct:1.5.3.Final' // MapStruct 의존성 추가
    compileOnly 'org.mapstruct:mapstruct-processor:1.5.3.Final' // MapStruct Processor 의존성 추가 (빌드 시 코드 생성용)
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final' // Annotation Processor 의존성 추가

    // test
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation 'org.projectlombok:lombok:1.18.30'

    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    implementation 'org.springframework.batch:spring-batch-core:4.3.4'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // iamport (카카오톡, 토스, 네이버페이 같은 간편 결제)
    implementation 'com.github.iamport:iamport-rest-client-java:0.2.21'
}

tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.annotationProcessor
    options.compilerArgs << "-Xlint:unchecked"
}

tasks.named('test') {
    useJUnitPlatform()
    outputs.dir file('build/generated-snippets')  // 스니펫 디렉토리 경로 지정
}

test {
    useJUnitPlatform() // JUnit 5 사용 시 필요
    outputs.dir file('build/generated-snippets')  // Spring REST Docs 스니펫 디렉토리 설정
}

asciidoctor {
    sourceDir = file('src/docs/asciidoc')  // Asciidoc 소스 디렉토리 설정
    outputDir = file('build/docs/asciidoc')  // 최종 문서화된 파일이 저장될 디렉토리
}

task generateApiDocs {
    dependsOn test
    doLast {
        // REST Docs 스니펫을 Asciidoc 형식으로 변환
        exec {
            commandLine 'gradle', 'asciidoctor'
        }
    }
}